name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: ðŸŽ‰ iOS Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - run: flutter pub get
      
      - name: Ensure Podfile with iOS 13.0
        run: |
          cd ios
          if [ ! -f Podfile ]; then
            pod init
          fi
          if grep -q "^platform :ios" Podfile; then
            sed -i '' 's/^platform :ios.*/platform :ios, '\''13.0'\''/' Podfile
          else
            sed -i '' '1s;^;platform :ios, '\''13.0'\''\n;' Podfile
          fi
          
      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Build iOS app
        run: flutter build ios --release --no-codesign --build-name=1.1.0 --build-number=${{ github.run_number }}

      - name: Check UUIDs
        run: |
          APP_UUID=$(dwarfdump --uuid build/ios/iphoneos/Runner.app/Runner | grep '(arm64)' | grep -o 'UUID: [0-9A-F-]*' | cut -d' ' -f2)
          DSYM_UUID=$(dwarfdump --uuid build/ios/Release-iphoneos/Runner.app.dSYM | grep '(arm64)' | grep -o 'UUID: [0-9A-F-]*' | cut -d' ' -f2)
          if [ "$APP_UUID" = "$DSYM_UUID" ]; then
            echo "UUIDs match: $APP_UUID"
          else
            echo "UUIDs do not match: APP_UUID=$APP_UUID, DSYM_UUID=$DSYM_UUID"
            exit 1
          fi

      - name: Upload dSYM to Crashlytics
        run: |
          dsymPath="build/ios/Release-iphoneos/Runner.app.dSYM"
          if [[ ! -d ${dsymPath} ]]; then
            echo "No debug symbols were found, skip publishing to Firebase Crashlytics"
          else
            echo "Publishing debug symbols from $dsymPath to Firebase Crashlytics"
            ./ios/Pods/FirebaseCrashlytics/upload-symbols -gsp ios/Runner/GoogleService-Info.plist -p ios $dsymPath
          fi

      - run: mkdir Payload
        working-directory: build/ios/iphoneos

      - run: mv Runner.app/ Payload
        working-directory: build/ios/iphoneos

      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/iphoneos

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v${{ github.run_number }}
          overwrite: true
          body: "This is first release"